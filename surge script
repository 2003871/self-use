const TARGET_DOMAIN_SUFFIX = '.heiyu.sapce'
const PROXY_TEST_URL = 'http://connectivitycheck.platform.hicloud.com/generate_204'  // 用于检测：无返回内容的 URL
const PROXY_GROUP = '微服'
const PROXY_POLICY = 'lazycat'
const DIRECT_POLICY = 'DIRECT'

async function checkLocalHttpProxy() {
  try {
    let res = await $httpClient.get({
      url: PROXY_TEST_URL,
      proxy: 'http://127.0.0.1:31085',
      timeout: 5000,
    })
    if (res.status === 204) {
      return true
    }
  } catch (e) {
    // 代理不可用或请求失败
  }
  return false
}

if ($request.url.includes(TARGET_DOMAIN_SUFFIX) || $request.headers['Host']?.endsWith(TARGET_DOMAIN_SUFFIX)) {
  (async () => {
    let proxyAvailable = await checkLocalHttpProxy()
    if (proxyAvailable) {
      $surge.setSelectGroup(PROXY_GROUP, PROXY_POLICY)
      $surge.notify('代理检测', `代理可用，切换策略为 ${PROXY_POLICY}`, '')
    } else {
      $surge.setSelectGroup(PROXY_GROUP, DIRECT_POLICY)
      $surge.notify('代理检测', `代理不可用，切换策略为 ${DIRECT_POLICY}`, '')
    }
  })()
}
